{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITP Project\\\\PrescriptionMS\\\\frontend\\\\src\\\\Components\\\\PrescriptionSearch\\\\PrescriptionSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrescriptionSearch = () => {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`http://localhost:5000/prescription/search/${patientId}`);\n      setPrescriptions(response.data.prescriptions);\n    } catch (err) {\n      console.error('Error fetching prescriptions:', err);\n      setError('Failed to fetch prescriptions. Please check the patient ID.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Prescriptions by Patient ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Patient ID\",\n        value: patientId,\n        onChange: e => setPatientId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), prescriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Issued\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Valid Until\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: prescriptions.map(prescription => {\n          var _prescription$patient, _prescription$doctorI;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_prescription$patient = prescription.patientId) === null || _prescription$patient === void 0 ? void 0 : _prescription$patient.name) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_prescription$doctorI = prescription.doctorId) === null || _prescription$doctorI === void 0 ? void 0 : _prescription$doctorI.name) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(prescription.dateIssued).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(prescription.validUntil).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prescription.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, prescription._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), prescriptions.length === 0 && !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No prescriptions found for the given patient ID.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PrescriptionSearch, \"lix21uWtXDIW5ZkU75aKt3/nuLQ=\");\n_c = PrescriptionSearch;\nexport default PrescriptionSearch;\nvar _c;\n$RefreshReg$(_c, \"PrescriptionSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PrescriptionSearch","_s","patientId","setPatientId","prescriptions","setPrescriptions","loading","setLoading","error","setError","handleSearch","response","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","length","border","map","prescription","_prescription$patient","_prescription$doctorI","name","doctorId","Date","dateIssued","toLocaleDateString","validUntil","notes","_id","_c","$RefreshReg$"],"sources":["E:/ITP Project/PrescriptionMS/frontend/src/Components/PrescriptionSearch/PrescriptionSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PrescriptionSearch = () => {\r\n    const [patientId, setPatientId] = useState('');\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSearch = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/prescription/search/${patientId}`);\r\n            setPrescriptions(response.data.prescriptions);\r\n        } catch (err) {\r\n            console.error('Error fetching prescriptions:', err);\r\n            setError('Failed to fetch prescriptions. Please check the patient ID.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Prescriptions by Patient ID</h1>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Patient ID\"\r\n                    value={patientId}\r\n                    onChange={(e) => setPatientId(e.target.value)}\r\n                />\r\n                <button onClick={handleSearch}>Search</button>\r\n            </div>\r\n\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {prescriptions.length > 0 && (\r\n                <table border=\"1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Patient Name</th>\r\n                            <th>Doctor Name</th>\r\n                            <th>Date Issued</th>\r\n                            <th>Valid Until</th>\r\n                            <th>Notes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {prescriptions.map((prescription) => (\r\n                            <tr key={prescription._id}>\r\n                                <td>{prescription.patientId?.name || 'N/A'}</td>\r\n                                <td>{prescription.doctorId?.name || 'N/A'}</td>\r\n                                <td>{new Date(prescription.dateIssued).toLocaleDateString()}</td>\r\n                                <td>{new Date(prescription.validUntil).toLocaleDateString()}</td>\r\n                                <td>{prescription.notes}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n\r\n            {prescriptions.length === 0 && !loading && !error && (\r\n                <p>No prescriptions found for the given patient ID.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrescriptionSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}