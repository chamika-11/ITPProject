{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITP Project\\\\PrescriptionMS\\\\frontend\\\\src\\\\Components\\\\GiminiApi\\\\GiminiApi.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './GiminiApi.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GiminiApi() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/prompt-post', {\n        prompt\n      });\n      setResponse(res.data.response);\n    } catch (err) {\n      console.error('Error:', err);\n      setResponse('An error occurred while processing your request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Generative AI Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Enter your prompt here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response\",\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(GiminiApi, \"f7/ly1Eyh5qbUOx1OL12RYnrAkI=\");\n_c = GiminiApi;\nexport default GiminiApi;\nvar _c;\n$RefreshReg$(_c, \"GiminiApi\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GiminiApi","_s","prompt","setPrompt","response","setResponse","handleSubmit","e","preventDefault","res","post","data","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["E:/ITP Project/PrescriptionMS/frontend/src/Components/GiminiApi/GiminiApi.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './GiminiApi.css';\r\n\r\nfunction GiminiApi() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/prompt-post', { prompt });\r\n      setResponse(res.data.response);\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setResponse('An error occurred while processing your request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Generative AI Prompt</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Enter your prompt here...\"\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        {response && <div className=\"response\">{response}</div>}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiminiApi;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,cAAc,EAAE;QAAER;MAAO,CAAC,CAAC;MACxDG,WAAW,CAACI,GAAG,CAACE,IAAI,CAACP,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEF,GAAG,CAAC;MAC5BP,WAAW,CAAC,kDAAkD,CAAC;IACjE;EACF,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BjB,OAAA;QAAAiB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BrB,OAAA;QAAMsB,QAAQ,EAAEf,YAAa;QAAAU,QAAA,gBAC3BjB,OAAA;UACEuB,KAAK,EAAEpB,MAAO;UACdqB,QAAQ,EAAGhB,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UAC3CG,WAAW,EAAC;QAA2B;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,eACFrB,OAAA;UAAQ2B,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACNhB,QAAQ,iBAAIL,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEZ;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA/BQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAiClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}