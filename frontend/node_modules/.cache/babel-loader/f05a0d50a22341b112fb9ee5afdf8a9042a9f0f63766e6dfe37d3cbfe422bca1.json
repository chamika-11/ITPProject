{"ast":null,"code":"var _jsxFileName = \"E:\\\\ITP Project\\\\PrescriptionMS\\\\frontend\\\\src\\\\Components\\\\prescriptionform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrescriptionForm = () => {\n  _s();\n  const [medicines, setMedicines] = useState([{\n    medicineName: '',\n    dosage: '',\n    quantity: 0,\n    frequency: '',\n    instructions: ''\n  }]);\n  const [patientId, setPatientId] = useState('');\n  const [doctorId, setDoctorId] = useState('');\n  const [validUntil, setValidUntil] = useState('');\n  const [notes, setNotes] = useState('');\n  const handleAddMedicine = () => {\n    setMedicines([...medicines, {\n      medicineName: '',\n      dosage: '',\n      quantity: 0,\n      frequency: '',\n      instructions: ''\n    }]);\n  };\n  const handleRemoveMedicine = index => {\n    const newMedicines = [...medicines];\n    newMedicines.splice(index, 1);\n    setMedicines(newMedicines);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const prescriptionData = {\n      medicines,\n      patientId,\n      doctorId,\n      validUntil,\n      notes\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/prescriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(prescriptionData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Prescription uploaded successfully:', data);\n        alert('Prescription uploaded successfully');\n      } else {\n        console.error('Error uploading prescription');\n        alert('Error uploading prescription');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Prescription Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), medicines.map((medicine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medicine-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Medicine Name\",\n        value: medicine.medicineName,\n        onChange: e => {\n          const newMedicines = [...medicines];\n          newMedicines[index].medicineName = e.target.value;\n          setMedicines(newMedicines);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Dosage\",\n        value: medicine.dosage,\n        onChange: e => {\n          const newMedicines = [...medicines];\n          newMedicines[index].dosage = e.target.value;\n          setMedicines(newMedicines);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: medicine.quantity,\n        onChange: e => {\n          const newMedicines = [...medicines];\n          newMedicines[index].quantity = e.target.value;\n          setMedicines(newMedicines);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Frequency\",\n        value: medicine.frequency,\n        onChange: e => {\n          const newMedicines = [...medicines];\n          newMedicines[index].frequency = e.target.value;\n          setMedicines(newMedicines);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Instructions\",\n        value: medicine.instructions,\n        onChange: e => {\n          const newMedicines = [...medicines];\n          newMedicines[index].instructions = e.target.value;\n          setMedicines(newMedicines);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"remove-btn\",\n        onClick: () => handleRemoveMedicine(index),\n        children: \"Remove Medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"add-btn\",\n      onClick: handleAddMedicine,\n      children: \"Add Medicine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Patient ID\",\n      value: patientId,\n      onChange: e => setPatientId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Doctor ID\",\n      value: doctorId,\n      onChange: e => setDoctorId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Valid Until\",\n      value: validUntil,\n      onChange: e => setValidUntil(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Notes\",\n      value: notes,\n      onChange: e => setNotes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Submit Prescription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PrescriptionForm, \"CfndNIOV8Nn3Itr9wUqzwMufbuw=\");\n_c = PrescriptionForm;\nexport default PrescriptionForm;\nvar _c;\n$RefreshReg$(_c, \"PrescriptionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PrescriptionForm","_s","medicines","setMedicines","medicineName","dosage","quantity","frequency","instructions","patientId","setPatientId","doctorId","setDoctorId","validUntil","setValidUntil","notes","setNotes","handleAddMedicine","handleRemoveMedicine","index","newMedicines","splice","handleSubmit","event","preventDefault","prescriptionData","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","alert","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","medicine","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/ITP Project/PrescriptionMS/frontend/src/Components/prescriptionform.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PrescriptionForm = () => {\r\n  const [medicines, setMedicines] = useState([\r\n    { medicineName: '', dosage: '', quantity: 0, frequency: '', instructions: '' },\r\n  ]);\r\n  const [patientId, setPatientId] = useState('');\r\n  const [doctorId, setDoctorId] = useState('');\r\n  const [validUntil, setValidUntil] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const handleAddMedicine = () => {\r\n    setMedicines([\r\n      ...medicines,\r\n      { medicineName: '', dosage: '', quantity: 0, frequency: '', instructions: '' },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveMedicine = (index) => {\r\n    const newMedicines = [...medicines];\r\n    newMedicines.splice(index, 1);\r\n    setMedicines(newMedicines);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const prescriptionData = {\r\n      medicines,\r\n      patientId,\r\n      doctorId,\r\n      validUntil,\r\n      notes,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/prescriptions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(prescriptionData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Prescription uploaded successfully:', data);\r\n        alert('Prescription uploaded successfully');\r\n      } else {\r\n        console.error('Error uploading prescription');\r\n        alert('Error uploading prescription');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Prescription Form</h2>\r\n\r\n      {/* Medicine Entries */}\r\n      {medicines.map((medicine, index) => (\r\n        <div key={index} className=\"medicine-entry\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Medicine Name\"\r\n            value={medicine.medicineName}\r\n            onChange={(e) => {\r\n              const newMedicines = [...medicines];\r\n              newMedicines[index].medicineName = e.target.value;\r\n              setMedicines(newMedicines);\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Dosage\"\r\n            value={medicine.dosage}\r\n            onChange={(e) => {\r\n              const newMedicines = [...medicines];\r\n              newMedicines[index].dosage = e.target.value;\r\n              setMedicines(newMedicines);\r\n            }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Quantity\"\r\n            value={medicine.quantity}\r\n            onChange={(e) => {\r\n              const newMedicines = [...medicines];\r\n              newMedicines[index].quantity = e.target.value;\r\n              setMedicines(newMedicines);\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Frequency\"\r\n            value={medicine.frequency}\r\n            onChange={(e) => {\r\n              const newMedicines = [...medicines];\r\n              newMedicines[index].frequency = e.target.value;\r\n              setMedicines(newMedicines);\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Instructions\"\r\n            value={medicine.instructions}\r\n            onChange={(e) => {\r\n              const newMedicines = [...medicines];\r\n              newMedicines[index].instructions = e.target.value;\r\n              setMedicines(newMedicines);\r\n            }}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"remove-btn\"\r\n            onClick={() => handleRemoveMedicine(index)}\r\n          >\r\n            Remove Medicine\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n      <button type=\"button\" className=\"add-btn\" onClick={handleAddMedicine}>\r\n        Add Medicine\r\n      </button>\r\n\r\n      {/* Patient and Doctor Details */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Patient ID\"\r\n        value={patientId}\r\n        onChange={(e) => setPatientId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Doctor ID\"\r\n        value={doctorId}\r\n        onChange={(e) => setDoctorId(e.target.value)}\r\n      />\r\n\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"Valid Until\"\r\n        value={validUntil}\r\n        onChange={(e) => setValidUntil(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Notes\"\r\n        value={notes}\r\n        onChange={(e) => setNotes(e.target.value)}\r\n      />\r\n\r\n      <button type=\"submit\" className=\"submit-btn\">\r\n        Submit Prescription\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PrescriptionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}